"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Release = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
/**
 * A Release is an instance of a chart running in a Kubernetes cluster.
 * A Chart is a Helm package. It contains all the resource definitions necessary to run an application, tool, or service inside a Kubernetes cluster.
 * Note - Helm Release is currently in BETA and may change. Use in production environment is discouraged.
 */
class Release extends pulumi.CustomResource {
    /**
     * Create a Release resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.chart === undefined) && !opts.urn) {
                throw new Error("Missing required property 'chart'");
            }
            resourceInputs["atomic"] = args ? args.atomic : undefined;
            resourceInputs["chart"] = args ? args.chart : undefined;
            resourceInputs["cleanupOnFail"] = args ? args.cleanupOnFail : undefined;
            resourceInputs["compat"] = "true";
            resourceInputs["createNamespace"] = args ? args.createNamespace : undefined;
            resourceInputs["dependencyUpdate"] = args ? args.dependencyUpdate : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["devel"] = args ? args.devel : undefined;
            resourceInputs["disableCRDHooks"] = args ? args.disableCRDHooks : undefined;
            resourceInputs["disableOpenapiValidation"] = args ? args.disableOpenapiValidation : undefined;
            resourceInputs["disableWebhooks"] = args ? args.disableWebhooks : undefined;
            resourceInputs["forceUpdate"] = args ? args.forceUpdate : undefined;
            resourceInputs["keyring"] = args ? args.keyring : undefined;
            resourceInputs["lint"] = args ? args.lint : undefined;
            resourceInputs["manifest"] = args ? args.manifest : undefined;
            resourceInputs["maxHistory"] = args ? args.maxHistory : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["postrender"] = args ? args.postrender : undefined;
            resourceInputs["recreatePods"] = args ? args.recreatePods : undefined;
            resourceInputs["renderSubchartNotes"] = args ? args.renderSubchartNotes : undefined;
            resourceInputs["replace"] = args ? args.replace : undefined;
            resourceInputs["repositoryOpts"] = args ? args.repositoryOpts : undefined;
            resourceInputs["resetValues"] = args ? args.resetValues : undefined;
            resourceInputs["resourceNames"] = args ? args.resourceNames : undefined;
            resourceInputs["reuseValues"] = args ? args.reuseValues : undefined;
            resourceInputs["skipAwait"] = args ? args.skipAwait : undefined;
            resourceInputs["skipCrds"] = args ? args.skipCrds : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["valueYamlFiles"] = args ? args.valueYamlFiles : undefined;
            resourceInputs["values"] = args ? args.values : undefined;
            resourceInputs["verify"] = args ? args.verify : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["waitForJobs"] = args ? args.waitForJobs : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        else {
            resourceInputs["atomic"] = undefined /*out*/;
            resourceInputs["chart"] = undefined /*out*/;
            resourceInputs["cleanupOnFail"] = undefined /*out*/;
            resourceInputs["createNamespace"] = undefined /*out*/;
            resourceInputs["dependencyUpdate"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["devel"] = undefined /*out*/;
            resourceInputs["disableCRDHooks"] = undefined /*out*/;
            resourceInputs["disableOpenapiValidation"] = undefined /*out*/;
            resourceInputs["disableWebhooks"] = undefined /*out*/;
            resourceInputs["forceUpdate"] = undefined /*out*/;
            resourceInputs["keyring"] = undefined /*out*/;
            resourceInputs["lint"] = undefined /*out*/;
            resourceInputs["manifest"] = undefined /*out*/;
            resourceInputs["maxHistory"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["namespace"] = undefined /*out*/;
            resourceInputs["postrender"] = undefined /*out*/;
            resourceInputs["recreatePods"] = undefined /*out*/;
            resourceInputs["renderSubchartNotes"] = undefined /*out*/;
            resourceInputs["replace"] = undefined /*out*/;
            resourceInputs["repositoryOpts"] = undefined /*out*/;
            resourceInputs["resetValues"] = undefined /*out*/;
            resourceInputs["resourceNames"] = undefined /*out*/;
            resourceInputs["reuseValues"] = undefined /*out*/;
            resourceInputs["skipAwait"] = undefined /*out*/;
            resourceInputs["skipCrds"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["timeout"] = undefined /*out*/;
            resourceInputs["valueYamlFiles"] = undefined /*out*/;
            resourceInputs["values"] = undefined /*out*/;
            resourceInputs["verify"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["waitForJobs"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Release.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Release resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Release(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Release.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Release.__pulumiType;
    }
}
exports.Release = Release;
/** @internal */
Release.__pulumiType = 'kubernetes:helm.sh/v3:Release';
//# sourceMappingURL=release.js.map